generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String    @unique
  password    String
  phoneNumber String    @unique
  createdAt   DateTime  @default(now()) @db.Timestamptz(3)
  businessAccounts    BusinessAccount[]
}

model BusinessAccount {
  id           Int           @id @default(autoincrement())
  userId       Int
  businessName String        @unique
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  balance      Decimal       @default(0)
  createdAt    DateTime      @default(now()) @db.Timestamptz(3)
  // transactions Transaction[]
}

// model Transaction {
//   id                   Int                @id @default(autoincrement())
//   businessAccountId            Int
//   businessAccount              BusinessAccount            @relation(fields: [businessAccountId], references: [id])
//   reference            String
//   amount               Decimal
//   bal_before           Decimal
//   bal_after            Decimal
//   type                 TransactionType
//   subType              TransactionSubType @relation(fields: [transactionSubTypeId], references: [id])
//   createdAt            DateTime           @default(now()) @db.Timestamptz(3)
//   metadata             Json?
//   transactionSubTypeId Int
// }

// model TransactionSubType {
//   id          Int           @id @default(autoincrement())
//   name        String
//   createdAt   DateTime      @default(now()) @db.Timestamptz(3)
//   updatedAt   DateTime      @updatedAt @db.Timestamptz(3)
//   Transaction Transaction[]
// }

// model TransferAttempt {
//   id             Int      @id @default(autoincrement())
//   sender_acc_id  Int
//   account_name   String
//   account_number String
//   bank_code      String
//   recipient_code String
//   reference      String   @unique
//   createdAt      DateTime @default(now()) @db.Timestamptz(3)
//   updatedAt      DateTime @updatedAt @db.Timestamptz(3)
// }

// enum TransactionType {
//   DEBIT
//   CREDIT
// }
